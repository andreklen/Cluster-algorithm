
// Versao atual 27/09 imprime medidas XB.



clear()// limpa as variáveis



cd C:\nebula\DataSet;// muda o diretório corrente do scilab


// Entrada de dados

NomeE = uigetfile("*.txt", pwd(), "Entrada dos dados:");//localização dos arquivos de entrada e saída
dados=fscanfMat(NomeE);// leitura dos dados

nomes=['Número Máximo de Famílias: Entre 2 e 6'] 
valor_ini=['2'];// define os valores inciais das variáveis definidas em nomes


resultados=x_mdialog('Entre com os dados:',nomes,valor_ini);//abre a janela

if resultados==[] then // resposta quando se clica em cancelar gerada na janela acima.
    
    messagebox('Execute novamente o programa');
    
   end

Voc1=evstr(resultados(1));// valor numerico do numero de agrupamentos;
//pr=evstr(resultados(2));// Valor numerico do grau de inclusão
//ks=evstr(resultados(2));// recebe o valor da métrica de distância
ks=1;
if ks<>1 then
    messagebox('A utilização da distância de Mahalanobis não permite análise das medidas de validação:');
  end

// parametros

// chamas as funções

tic();

exec('C:\nebula\normaliza.sci');
exec('C:\nebula\centrost.sci');

exec('C:\nebula\angulos.sci');

exec('C:\nebula\myfunc.sci');

exec('C:\nebula\dist.sci');

exec('C:\nebula\aleat.sci');

exec('C:\nebula\funczero.sci');
exec('C:\nebula\padr.sci');

exec('C:\nebula\fplot.sci');
exec('C:\nebula\plote.sci');
exec('C:\nebula\clus.sci');
exec('C:\nebula\udata.sci');
exec('C:\nebula\centrosdata.sci');



//Variáveis globais
erros=0.001; // critério de parada

t=0;// contador do while

l=100; //limite do contador do metodo FKM
lwhi=2;
rui=1;
m=2;
medidas=[];

clustersF=[];// matriz final dos resultados
Grupos=[];// todos os grupos formados
Centros=[];// todos os centros gerados


// prepara a normalização dos dados e cálculos dos cossenos diretos

// determina se os dados possuem informações além da orientação.

[nl, nc]=size(dados);



if nc==2 then
 matriz=myfunc(dados);
 dadosplot=ones(nl,1);
 dadosplot=cat(2,dados,dadosplot);
 
  
else
    matrizcos=myfunc(dados(:,[1:2]));// calcula os cossenos diretores
    
    matriznorm=normaliza(dados(:,[3:nc]));// normaliza os parâmetros
    
 // matrizpadr=padr(dados(:,[3:nc])); // padroniza os parâmetros
    
 // matriz=cat(2,matrizcos,matriznorm); // cria a matriz de dados 
 
 
 
  //dados sem normaliza ou padronizar
    
    matriz=cat(2,matriznorm,dados(:,[3:nc])); // dados originais
    
    
end
    
// metódo fuzzy



 while lwhi<=Voc1;
 
 
     
       
       exec('C:\nebula\aleatorio.sce');
       exec('C:\nebula\heuristica32.sce');
       
       if ks==1 then
            exec('C:\nebula\heuristica1.sce');
        else
           exec('C:\nebula\heuristica1maha.sce');
      end
     
         
      
   //medidasF=[medidasF,medidas]; testes 
  //clustersF=[clustersF;grupos]
   
   
    
    // fim da execução do método fuzzy
    
    
    
    
  lwhi=lwhi+1;// contador do while
    
end// fim do while

time=toc();// calcula o tempo de execução

results=cat(2,dados(:,[1:2]),Grupos);

//imprimir as projecoes. 

//NomeE = uigetfile("*.txt", pwd(), "Entrada dos dados:");//localização dos arquivos de entrada e saída
//dados23=fscanfMat(NomeE);


  
 clus(dadosplot);
  
 [nlr, ncr]=size(Grupos)
  
 for i=1:ncr
     scf(max(winsid())+1)
     Sets=cat(2,dados(:,[1:2]),Grupos(:,i))
      
     clus(Sets);
      
      
      
 end
 

  // teste para calcular a média dos dados
  
 // teste=cat(2,dados(:,[1:2]),ufuzzy(:,1));
     // clus(teste);
      
   // Mediadata1=centrosdata(matriz);
   
    
    //Mediadata=angulos(Mediadata1)
   
   // udata=dist(matriz,Mediadata1)
  
     //  teste=cat(2,dados(:,[1:2]),udata);
    //  clus(teste);
  
// gera a matriz   
  
  
  
  // expor the results
  
  



//if ks ==1 then
    // limpa a janela gráfica
//scf(max(winsid())+1)
   // exec('C:\nebula\graficos.sce');// imprime os gráficos.
    
//else
   // clf();  teste por isso ocultas

 // end

  // funcao para imprimir as projecoes. 
  
               
messagebox('Fim da execução:');



